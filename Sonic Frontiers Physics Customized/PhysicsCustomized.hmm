Code "Physics Customized Initial Walk"
//
    #include "Reflection" noemit

    #lib "SonicParameters"
    #lib "Sonic"
    #lib "Player"
    #lib "Reflection"
    #lib "HMM"
    #lib "INI"

    static bool IsConfigInitialised = false;
    static float WalkSpeed = 0;
//
{
    if (!IsConfigInitialised)
    {
        var mods = HMM.GetModByID("2938D1B0");
        
        if (mods != null)
        {
            string modConfigIniPath = System.IO.Path.Combine(mods.Path, "mod.ini");
            var ini = INI.Read(modConfigIniPath);

            WalkSpeed = INI.Parse(ini["InitialSpeed"]["walkspeedinitial"], WalkSpeed);
        }
        else
        {
            Console.WriteLine($"[Physics Customized] Failed to locate mod directory.");
            return;
        }

        IsConfigInitialised = true;
    }

    var SonicParametersInfo = Reflection.GetDataInfo<SonicParameters.Root>("player_common");
    
    if (SonicParametersInfo.pData == null)
        return;

    if (WalkSpeed >= 0)
    {
        RFL_SET_PARAM(SonicParametersInfo, forwardView.modePackage.speed.normal.initial, WalkSpeed);
    }
}


Code "Physics Customized Initial Run"
//
    #include "Reflection" noemit

    #lib "SonicParameters"
    #lib "Sonic"
    #lib "Player"
    #lib "Reflection"
    #lib "HMM"
    #lib "INI"

    static bool IsConfigInitialised = false;
    static float RunSpeed = 0;
//
{
    if (!IsConfigInitialised)
    {
        var mods = HMM.GetModByID("2938D1B0");
        
        if (mods != null)
        {
            string modConfigIniPath = System.IO.Path.Combine(mods.Path, "mod.ini");
            var ini = INI.Read(modConfigIniPath);

            RunSpeed = INI.Parse(ini["InitialSpeed"]["runspeedinitial"], RunSpeed);
        }
        else
        {
            Console.WriteLine($"[Physics Customized] Failed to locate mod directory.");
            return;
        }

        IsConfigInitialised = true;
    }

    var SonicParametersInfo = Reflection.GetDataInfo<SonicParameters.Root>("player_common");
    
    if (SonicParametersInfo.pData == null)
        return;

    if (RunSpeed >= 0)
    {
        RFL_SET_PARAM(SonicParametersInfo, forwardView.modePackage.speed.normal2.initial, RunSpeed);
    }
}


Code "Physics Customized Initial Boost 2"
//
    #include "Reflection" noemit

    #lib "SonicParameters"
    #lib "Sonic"
    #lib "Player"
    #lib "Reflection"
    #lib "HMM"
    #lib "INI"

    static bool IsConfigInitialised = false;
    static float BoostSpeed2 = 0;
//
{
    if (!IsConfigInitialised)
    {
        var mods = HMM.GetModByID("2938D1B0");
        
        if (mods != null)
        {
            string modConfigIniPath = System.IO.Path.Combine(mods.Path, "mod.ini");
            var ini = INI.Read(modConfigIniPath);

            BoostSpeed2 = INI.Parse(ini["InitialSpeed"]["boost2speedinitial"], BoostSpeed2);
        }
        else
        {
            Console.WriteLine($"[Physics Customized] Failed to locate mod directory.");
            return;
        }

        IsConfigInitialised = true;
    }

    var SonicParametersInfo = Reflection.GetDataInfo<SonicParameters.Root>("player_common");
    
    if (SonicParametersInfo.pData == null)
        return;

    if (BoostSpeed2 >= 0)
    {
        RFL_SET_PARAM(SonicParametersInfo, forwardView.modePackage.speed.boost2.initial, BoostSpeed2);
    }
}


Code "Physics Customized Initial Powerboost"
//
    #include "Reflection" noemit

    #lib "SonicParameters"
    #lib "Sonic"
    #lib "Player"
    #lib "Reflection"
    #lib "HMM"
    #lib "INI"

    static bool IsConfigInitialised = false;
    static float PowerboostSpeed = 0;
//
{
    if (!IsConfigInitialised)
    {
        var mods = HMM.GetModByID("2938D1B0");
        
        if (mods != null)
        {
            string modConfigIniPath = System.IO.Path.Combine(mods.Path, "mod.ini");
            var ini = INI.Read(modConfigIniPath);

            PowerboostSpeed = INI.Parse(ini["InitialSpeed"]["powerboostspeedinitial"], PowerboostSpeed);
        }
        else
        {
            Console.WriteLine($"[Physics Customized] Failed to locate mod directory.");
            return;
        }

        IsConfigInitialised = true;
    }

    var SonicParametersInfo = Reflection.GetDataInfo<SonicParameters.Root>("player_common");
    
    if (SonicParametersInfo.pData == null)
        return;

    if (PowerboostSpeed >= 0)
    {
        RFL_SET_PARAM(SonicParametersInfo, forwardView.modePackage.speed.boostLvMax.initial, PowerboostSpeed);
    }
}


Code "Physics Customized Initial Powerboost 2"
//
    #include "Reflection" noemit

    #lib "SonicParameters"
    #lib "Sonic"
    #lib "Player"
    #lib "Reflection"
    #lib "HMM"
    #lib "INI"

    static bool IsConfigInitialised = false;
    static float Powerboost2Speed = 0;
//
{
    if (!IsConfigInitialised)
    {
        var mods = HMM.GetModByID("2938D1B0");
        
        if (mods != null)
        {
            string modConfigIniPath = System.IO.Path.Combine(mods.Path, "mod.ini");
            var ini = INI.Read(modConfigIniPath);

            Powerboost2Speed = INI.Parse(ini["InitialSpeed"]["powerboost2speedinitial"], Powerboost2Speed);
        }
        else
        {
            Console.WriteLine($"[Physics Customized] Failed to locate mod directory.");
            return;
        }

        IsConfigInitialised = true;
    }

    var SonicParametersInfo = Reflection.GetDataInfo<SonicParameters.Root>("player_common");
    
    if (SonicParametersInfo.pData == null)
        return;

    if (Powerboost2Speed >= 0)
    {
        RFL_SET_PARAM(SonicParametersInfo, forwardView.modePackage.speed.boostLvMax2.initial, Powerboost2Speed);
    }
}


Code "Physics Customized Magnet Strength"
//
    #include "Reflection" noemit

    #lib "SonicParameters"
    #lib "Sonic"
    #lib "Player"
    #lib "Reflection"
    #lib "HMM"
    #lib "INI"

    static bool IsConfigInitialised = false;
    static float MagnetStrength = 0;
//
{
    if (!IsConfigInitialised)
    {
        var mods = HMM.GetModByID("2938D1B0");
        
        if (mods != null)
        {
            string modConfigIniPath = System.IO.Path.Combine(mods.Path, "mod.ini");
            var ini = INI.Read(modConfigIniPath);

            MagnetStrength = INI.Parse(ini["Common"]["magnetstrength"], MagnetStrength);
        }
        else
        {
            Console.WriteLine($"[Physics Customized] Failed to locate mod directory.");
            return;
        }

        IsConfigInitialised = true;
    }

    var SonicParametersInfo = Reflection.GetDataInfo<SonicParameters.Root>("player_common");
    
    if (SonicParametersInfo.pData == null)
        return;

    if (MagnetStrength >= 0)
    {
        RFL_SET_PARAM(SonicParametersInfo, forwardView.modePackage.common.collectRingRange, MagnetStrength);
    }
}


Code "Physics Customized Max Walk"
//
    #include "Reflection" noemit

    #lib "SonicParameters"
    #lib "Sonic"
    #lib "Player"
    #lib "Reflection"
    #lib "HMM"
    #lib "INI"

    static bool IsConfigInitialised = false;
    static float WalkSpeedMax = 0;
//
{
    if (!IsConfigInitialised)
    {
        var mods = HMM.GetModByID("2938D1B0");
        
        if (mods != null)
        {
            string modConfigIniPath = System.IO.Path.Combine(mods.Path, "mod.ini");
            var ini = INI.Read(modConfigIniPath);

            WalkSpeedMax = INI.Parse(ini["MaxSpeed"]["walkspeedmax"], WalkSpeedMax);
        }
        else
        {
            Console.WriteLine($"[Physics Customized] Failed to locate mod directory.");
            return;
        }

        IsConfigInitialised = true;
    }

    var SonicParametersInfo = Reflection.GetDataInfo<SonicParameters.Root>("player_common");
    
    if (SonicParametersInfo.pData == null)
        return;

    if (WalkSpeedMax >= 0)
    {
        RFL_SET_PARAM(SonicParametersInfo, forwardView.modePackage.speed.normal.max, WalkSpeedMax);
    }
}


Code "Physics Customized Max Run"
//
    #include "Reflection" noemit

    #lib "SonicParameters"
    #lib "Sonic"
    #lib "Player"
    #lib "Reflection"
    #lib "HMM"
    #lib "INI"

    static bool IsConfigInitialised = false;
    static float RunSpeedMax = 0;
//
{
    if (!IsConfigInitialised)
    {
        var mods = HMM.GetModByID("2938D1B0");
        
        if (mods != null)
        {
            string modConfigIniPath = System.IO.Path.Combine(mods.Path, "mod.ini");
            var ini = INI.Read(modConfigIniPath);

            RunSpeedMax = INI.Parse(ini["MaxSpeed"]["runspeedmax"], RunSpeedMax);
        }
        else
        {
            Console.WriteLine($"[Physics Customized] Failed to locate mod directory.");
            return;
        }

        IsConfigInitialised = true;
    }

    var SonicParametersInfo = Reflection.GetDataInfo<SonicParameters.Root>("player_common");
    
    if (SonicParametersInfo.pData == null)
        return;

    if (RunSpeedMax >= 0)
    {
        RFL_SET_PARAM(SonicParametersInfo, forwardView.modePackage.speed.normal2.max, RunSpeedMax);
    }
}


Code "Physics Customized Max Boost"
//
    #include "Reflection" noemit

    #lib "SonicParameters"
    #lib "Sonic"
    #lib "Player"
    #lib "Reflection"
    #lib "HMM"
    #lib "INI"

    static bool IsConfigInitialised = false;
    static float BoostSpeedMax = 0;
//
{
    if (!IsConfigInitialised)
    {
        var mods = HMM.GetModByID("2938D1B0");
        
        if (mods != null)
        {
            string modConfigIniPath = System.IO.Path.Combine(mods.Path, "mod.ini");
            var ini = INI.Read(modConfigIniPath);

            BoostSpeedMax = INI.Parse(ini["MaxSpeed"]["boostspeedmax"], BoostSpeedMax);
        }
        else
        {
            Console.WriteLine($"[Physics Customized] Failed to locate mod directory.");
            return;
        }

        IsConfigInitialised = true;
    }

    var SonicParametersInfo = Reflection.GetDataInfo<SonicParameters.Root>("player_common");
    
    if (SonicParametersInfo.pData == null)
        return;

    if (BoostSpeedMax >= 0)
    {
        RFL_SET_PARAM(SonicParametersInfo, forwardView.modePackage.speed.boost.max, BoostSpeedMax);
    }
}


Code "Physics Customized Max Boost2"
//
    #include "Reflection" noemit

    #lib "SonicParameters"
    #lib "Sonic"
    #lib "Player"
    #lib "Reflection"
    #lib "HMM"
    #lib "INI"

    static bool IsConfigInitialised = false;
    static float Boost2SpeedMax = 0;
//
{
    if (!IsConfigInitialised)
    {
        var mods = HMM.GetModByID("2938D1B0");
        
        if (mods != null)
        {
            string modConfigIniPath = System.IO.Path.Combine(mods.Path, "mod.ini");
            var ini = INI.Read(modConfigIniPath);

            Boost2SpeedMax = INI.Parse(ini["MaxSpeed"]["boost2speedmax"], Boost2SpeedMax);
        }
        else
        {
            Console.WriteLine($"[Physics Customized] Failed to locate mod directory.");
            return;
        }

        IsConfigInitialised = true;
    }

    var SonicParametersInfo = Reflection.GetDataInfo<SonicParameters.Root>("player_common");
    
    if (SonicParametersInfo.pData == null)
        return;

    if (Boost2SpeedMax >= 0)
    {
        RFL_SET_PARAM(SonicParametersInfo, forwardView.modePackage.speed.boost2.max, Boost2SpeedMax);
    }
}


Code "Physics Customized Max Powerboost"
//
    #include "Reflection" noemit

    #lib "SonicParameters"
    #lib "Sonic"
    #lib "Player"
    #lib "Reflection"
    #lib "HMM"
    #lib "INI"

    static bool IsConfigInitialised = false;
    static float PowerboostSpeedMax = 0;
//
{
    if (!IsConfigInitialised)
    {
        var mods = HMM.GetModByID("2938D1B0");
        
        if (mods != null)
        {
            string modConfigIniPath = System.IO.Path.Combine(mods.Path, "mod.ini");
            var ini = INI.Read(modConfigIniPath);

            PowerboostSpeedMax = INI.Parse(ini["MaxSpeed"]["powerboostspeedmax"], PowerboostSpeedMax);
        }
        else
        {
            Console.WriteLine($"[Physics Customized] Failed to locate mod directory.");
            return;
        }

        IsConfigInitialised = true;
    }

    var SonicParametersInfo = Reflection.GetDataInfo<SonicParameters.Root>("player_common");
    
    if (SonicParametersInfo.pData == null)
        return;

    if (PowerboostSpeedMax >= 0)
    {
        RFL_SET_PARAM(SonicParametersInfo, forwardView.modePackage.speed.boostLvMax.max, PowerboostSpeedMax);
    }
}


Code "Physics Customized Max Powerboost2"
//
    #include "Reflection" noemit

    #lib "SonicParameters"
    #lib "Sonic"
    #lib "Player"
    #lib "Reflection"
    #lib "HMM"
    #lib "INI"

    static bool IsConfigInitialised = false;
    static float Powerboost2SpeedMax = 0;
//
{
    if (!IsConfigInitialised)
    {
        var mods = HMM.GetModByID("2938D1B0");
        
        if (mods != null)
        {
            string modConfigIniPath = System.IO.Path.Combine(mods.Path, "mod.ini");
            var ini = INI.Read(modConfigIniPath);

            Powerboost2SpeedMax = INI.Parse(ini["MaxSpeed"]["powerboost2speedmax"], Powerboost2SpeedMax);
        }
        else
        {
            Console.WriteLine($"[Physics Customized] Failed to locate mod directory.");
            return;
        }

        IsConfigInitialised = true;
    }

    var SonicParametersInfo = Reflection.GetDataInfo<SonicParameters.Root>("player_common");
    
    if (SonicParametersInfo.pData == null)
        return;

    if (Powerboost2SpeedMax >= 0)
    {
        RFL_SET_PARAM(SonicParametersInfo, forwardView.modePackage.speed.boostLvMax2.max, Powerboost2SpeedMax);
    }
}

Code "Physics Customized Min Walk"
//
    #include "Reflection" noemit

    #lib "SonicParameters"
    #lib "Sonic"
    #lib "Player"
    #lib "Reflection"
    #lib "HMM"
    #lib "INI"

    static bool IsConfigInitialised = false;
    static float WalkSpeedMin = 0;
//
{
    if (!IsConfigInitialised)
    {
        var mods = HMM.GetModByID("2938D1B0");
        
        if (mods != null)
        {
            string modConfigIniPath = System.IO.Path.Combine(mods.Path, "mod.ini");
            var ini = INI.Read(modConfigIniPath);

            WalkSpeedMin = INI.Parse(ini["MinSpeed"]["walkspeedmin"], WalkSpeedMin);
        }
        else
        {
            Console.WriteLine($"[Physics Customized] Failed to locate mod directory.");
            return;
        }

        IsConfigInitialised = true;
    }

    var SonicParametersInfo = Reflection.GetDataInfo<SonicParameters.Root>("player_common");
    
    if (SonicParametersInfo.pData == null)
        return;

    if (WalkSpeedMin >= 0)
    {
        RFL_SET_PARAM(SonicParametersInfo, forwardView.modePackage.speed.normal.min, WalkSpeedMin);
    }
}


Code "Physics Customized Min Run"
//
    #include "Reflection" noemit

    #lib "SonicParameters"
    #lib "Sonic"
    #lib "Player"
    #lib "Reflection"
    #lib "HMM"
    #lib "INI"

    static bool IsConfigInitialised = false;
    static float RunSpeedMin = 0;
//
{
    if (!IsConfigInitialised)
    {
        var mods = HMM.GetModByID("2938D1B0");
        
        if (mods != null)
        {
            string modConfigIniPath = System.IO.Path.Combine(mods.Path, "mod.ini");
            var ini = INI.Read(modConfigIniPath);

            RunSpeedMin = INI.Parse(ini["MinSpeed"]["runspeedmin"], RunSpeedMin);
        }
        else
        {
            Console.WriteLine($"[Physics Customized] Failed to locate mod directory.");
            return;
        }

        IsConfigInitialised = true;
    }

    var SonicParametersInfo = Reflection.GetDataInfo<SonicParameters.Root>("player_common");
    
    if (SonicParametersInfo.pData == null)
        return;

    if (RunSpeedMin >= 0)
    {
        RFL_SET_PARAM(SonicParametersInfo, forwardView.modePackage.speed.normal2.min, RunSpeedMin);
    }
}


Code "Physics Customized Min Boost"
//
    #include "Reflection" noemit

    #lib "SonicParameters"
    #lib "Sonic"
    #lib "Player"
    #lib "Reflection"
    #lib "HMM"
    #lib "INI"

    static bool IsConfigInitialised = false;
    static float BoostSpeedMin = 0;
//
{
    if (!IsConfigInitialised)
    {
        var mods = HMM.GetModByID("2938D1B0");
        
        if (mods != null)
        {
            string modConfigIniPath = System.IO.Path.Combine(mods.Path, "mod.ini");
            var ini = INI.Read(modConfigIniPath);

            BoostSpeedMin = INI.Parse(ini["MinSpeed"]["boostspeedmin"], BoostSpeedMin);
        }
        else
        {
            Console.WriteLine($"[Physics Customized] Failed to locate mod directory.");
            return;
        }

        IsConfigInitialised = true;
    }

    var SonicParametersInfo = Reflection.GetDataInfo<SonicParameters.Root>("player_common");
    
    if (SonicParametersInfo.pData == null)
        return;

    if (BoostSpeedMin >= 0)
    {
        RFL_SET_PARAM(SonicParametersInfo, forwardView.modePackage.speed.boost.min, BoostSpeedMin);
    }
}


Code "Physics Customized Min Boost2"
//
    #include "Reflection" noemit

    #lib "SonicParameters"
    #lib "Sonic"
    #lib "Player"
    #lib "Reflection"
    #lib "HMM"
    #lib "INI"

    static bool IsConfigInitialised = false;
    static float Boost2SpeedMin = 0;
//
{
    if (!IsConfigInitialised)
    {
        var mods = HMM.GetModByID("2938D1B0");
        
        if (mods != null)
        {
            string modConfigIniPath = System.IO.Path.Combine(mods.Path, "mod.ini");
            var ini = INI.Read(modConfigIniPath);

            Boost2SpeedMin = INI.Parse(ini["MinSpeed"]["boost2speedmin"], Boost2SpeedMin);
        }
        else
        {
            Console.WriteLine($"[Physics Customized] Failed to locate mod directory.");
            return;
        }

        IsConfigInitialised = true;
    }

    var SonicParametersInfo = Reflection.GetDataInfo<SonicParameters.Root>("player_common");
    
    if (SonicParametersInfo.pData == null)
        return;

    if (Boost2SpeedMin >= 0)
    {
        RFL_SET_PARAM(SonicParametersInfo, forwardView.modePackage.speed.boost2.min, Boost2SpeedMin);
    }
}


Code "Physics Customized Min Powerboost"
//
    #include "Reflection" noemit

    #lib "SonicParameters"
    #lib "Sonic"
    #lib "Player"
    #lib "Reflection"
    #lib "HMM"
    #lib "INI"

    static bool IsConfigInitialised = false;
    static float PowerboostSpeedMin = 0;
//
{
    if (!IsConfigInitialised)
    {
        var mods = HMM.GetModByID("2938D1B0");
        
        if (mods != null)
        {
            string modConfigIniPath = System.IO.Path.Combine(mods.Path, "mod.ini");
            var ini = INI.Read(modConfigIniPath);

            PowerboostSpeedMin = INI.Parse(ini["MinSpeed"]["powerboostspeedmin"], PowerboostSpeedMin);
        }
        else
        {
            Console.WriteLine($"[Physics Customized] Failed to locate mod directory.");
            return;
        }

        IsConfigInitialised = true;
    }

    var SonicParametersInfo = Reflection.GetDataInfo<SonicParameters.Root>("player_common");
    
    if (SonicParametersInfo.pData == null)
        return;

    if (PowerboostSpeedMin >= 0)
    {
        RFL_SET_PARAM(SonicParametersInfo, forwardView.modePackage.speed.boostLvMax.min, PowerboostSpeedMin);
    }
}


Code "Physics Customized Min Powerboost2"
//
    #include "Reflection" noemit

    #lib "SonicParameters"
    #lib "Sonic"
    #lib "Player"
    #lib "Reflection"
    #lib "HMM"
    #lib "INI"

    static bool IsConfigInitialised = false;
    static float Powerboost2SpeedMin = 0;
//
{
    if (!IsConfigInitialised)
    {
        var mods = HMM.GetModByID("2938D1B0");
        
        if (mods != null)
        {
            string modConfigIniPath = System.IO.Path.Combine(mods.Path, "mod.ini");
            var ini = INI.Read(modConfigIniPath);

            Powerboost2SpeedMin = INI.Parse(ini["MinSpeed"]["powerboost2speedmin"], Powerboost2SpeedMin);
        }
        else
        {
            Console.WriteLine($"[Physics Customized] Failed to locate mod directory.");
            return;
        }

        IsConfigInitialised = true;
    }

    var SonicParametersInfo = Reflection.GetDataInfo<SonicParameters.Root>("player_common");
    
    if (SonicParametersInfo.pData == null)
        return;

    if (Powerboost2SpeedMin >= 0)
    {
        RFL_SET_PARAM(SonicParametersInfo, forwardView.modePackage.speed.boostLvMax2.min, Powerboost2SpeedMin);
    }
}


Code "Physics Customized Max Speed Limit"
//
    #include "Reflection" noemit

    #lib "SonicParameters"
    #lib "Sonic"
    #lib "Player"
    #lib "Reflection"
    #lib "HMM"
    #lib "INI"

    static bool IsConfigInitialised = false;
    static float MaxSpeedLimit = 0;
//
{
    if (!IsConfigInitialised)
    {
        var mods = HMM.GetModByID("2938D1B0");
        
        if (mods != null)
        {
            string modConfigIniPath = System.IO.Path.Combine(mods.Path, "mod.ini");
            var ini = INI.Read(modConfigIniPath);

            MaxSpeedLimit = INI.Parse(ini["Momentum"]["maxspeedlimit"], MaxSpeedLimit);
        }
        else
        {
            Console.WriteLine($"[Physics Customized] Failed to locate mod directory.");
            return;
        }

        IsConfigInitialised = true;
    }

    var SonicParametersInfo = Reflection.GetDataInfo<SonicParameters.Root>("player_common");
    
    if (SonicParametersInfo.pData == null)
        return;

    if (MaxSpeedLimit >= 0)
    {
        RFL_SET_PARAM(SonicParametersInfo, forwardView.modePackage.speed.maxSpeedOver, MaxSpeedLimit);
        RFL_SET_PARAM(SonicParametersInfo, forwardView.modePackage.speed.opitonMaxSpeedLimitMax, MaxSpeedLimit);
        RFL_SET_PARAM(SonicParametersInfo, forwardView.modePackage.speed.opitonMaxSpeedLimitMin, MaxSpeedLimit);
    }
}


Code "Physics Customized Up Hill"
//
    #include "Reflection" noemit

    #lib "SonicParameters"
    #lib "Sonic"
    #lib "Player"
    #lib "Reflection"
    #lib "HMM"
    #lib "INI"

    static bool IsConfigInitialised = false;
    static float UpSpeed = 0;
//
{
    if (!IsConfigInitialised)
    {
        var mods = HMM.GetModByID("2938D1B0");
        
        if (mods != null)
        {
            string modConfigIniPath = System.IO.Path.Combine(mods.Path, "mod.ini");
            var ini = INI.Read(modConfigIniPath);

            UpSpeed = INI.Parse(ini["Momentum"]["upspeed"], UpSpeed);
        }
        else
        {
            Console.WriteLine($"[Physics Customized] Failed to locate mod directory.");
            return;
        }

        IsConfigInitialised = true;
    }

    var SonicParametersInfo = Reflection.GetDataInfo<SonicParameters.Root>("player_common");
    
    if (SonicParametersInfo.pData == null)
        return;

    if (UpSpeed != 0)
    {
        RFL_SET_PARAM(SonicParametersInfo, forwardView.modePackage.speed.maxGravityDecele, UpSpeed);
    }
}


Code "Physics Customized Down Hill"
//
    #include "Reflection" noemit

    #lib "SonicParameters"
    #lib "Sonic"
    #lib "Player"
    #lib "Reflection"
    #lib "HMM"
    #lib "INI"

    static bool IsConfigInitialised = false;
    static float DownSpeed = 0;
//
{
    if (!IsConfigInitialised)
    {
        var mods = HMM.GetModByID("2938D1B0");
        
        if (mods != null)
        {
            string modConfigIniPath = System.IO.Path.Combine(mods.Path, "mod.ini");
            var ini = INI.Read(modConfigIniPath);

            DownSpeed = INI.Parse(ini["Momentum"]["downspeed"], DownSpeed);
        }
        else
        {
            Console.WriteLine($"[Physics Customized] Failed to locate mod directory.");
            return;
        }

        IsConfigInitialised = true;
    }

    var SonicParametersInfo = Reflection.GetDataInfo<SonicParameters.Root>("player_common");
    
    if (SonicParametersInfo.pData == null)
        return;

    if (DownSpeed != 0)
    {
        RFL_SET_PARAM(SonicParametersInfo, forwardView.modePackage.speed.maxGravityAccele, DownSpeed);
    }
}


Code "Physics Customized Sensitivity Hill Speed"
//
    #include "Reflection" noemit

    #lib "SonicParameters"
    #lib "Sonic"
    #lib "Player"
    #lib "Reflection"
    #lib "HMM"
    #lib "INI"

    static bool IsConfigInitialised = false;
    static float HillSens = 0;
//
{
    if (!IsConfigInitialised)
    {
        var mods = HMM.GetModByID("2938D1B0");
        
        if (mods != null)
        {
            string modConfigIniPath = System.IO.Path.Combine(mods.Path, "mod.ini");
            var ini = INI.Read(modConfigIniPath);

            HillSens = INI.Parse(ini["Momentum"]["accelesensitive"], HillSens);
        }
        else
        {
            Console.WriteLine($"[Physics Customized] Failed to locate mod directory.");
            return;
        }

        IsConfigInitialised = true;
    }

    var SonicParametersInfo = Reflection.GetDataInfo<SonicParameters.Root>("player_common");
    
    if (SonicParametersInfo.pData == null)
        return;

    if (HillSens != 0)
    {
        RFL_SET_PARAM(SonicParametersInfo, forwardView.modePackage.speed.acceleSensitive, HillSens);
    }
}
